name: Upload Download Workflow
run-name: Sample flow
on:
    workflow_dispatch: 
        inputs:
            osname:
                type: string
                required: true
                description: enter os name
env:
    USER_NAME: Pradeep
    PASS_WORD: Shetty
jobs:
    firstJob:
        name: first job
        runs-on: ${{ inputs.osname }}
        steps:
            - name: checkout the code
              uses: actions/checkout@v3
            - name: setup the node
              uses: actions/setup-node@v3
              with:
                  node-version: 18
            - name: cache the code
              id: cache
              uses: actions/cache@v3
              with: 
                path: node_modules
                key: pradeep-${{ hashFiles('**/package-lock.json') }}
            - name: install dependencies
              if: steps.cache.outputs.cache-hit != 'true'
              run: |
                npm install
                ls
    lint:
        name: second job
        needs: firstJob
        runs-on: ${{ inputs.osname }}
        steps:
            - name: checkout the code
              uses: actions/checkout@v3
            - name: setup the node
              uses: actions/setup-node@v3
              with:
                node-version: 18
            - name: cache the code
              id: cache
              uses: actions/cache@v3
              with: 
                path: node_modules
                key: pradeep-${{ hashFiles('**/package-lock.json') }}
            - name: install dependencies
              if: steps.cache.outputs.cache-hit != 'true'
              run: |
                npm install
                ls
            - name: lint the code
              run: |
                npm run lint
            - name: run the tests
              run: |
                npm run test
            - name: upload the artifacts
              uses: actions/upload-artifact@v3
              with:
                path: test.json
                name: distex
    build:
      name: build the code
      needs: lint
      runs-on: ${{inputs.osname}} 
      steps:
        - name: checkout the code
          uses: actions/checkout@v3
        - name: setup the node
          uses: actions/setup-node@v3
          with:
           node-version: 18
        - name: cache the code
          id: cache
          uses: actions/cache@v3
          with: 
           path: node_modules
           key: pradeep-${{ hashFiles('**/package-lock.json') }}
        - name: install dependencies
          if: steps.cache.outputs.cache-hit != 'true'
          run: |
            npm install
            ls
        - name: build the code
          run: |
            npm run build
        - name: upload the artifacts
          uses: actions/upload-artifact@v3
          with:
            path: dist
            name: keka
    deploy:
      name: download_dependencies
      runs-on: ${{inputs.osname}}
      needs: build
      steps:
        - name: download dependencies
          uses: actions/download-artifact@v3
          with:
            name: keka
        - name: list the files
          run: |
            ls


                  

